#!/usr/bin/env python3

import os
import sys
import configparser
import pickle
from itertools import product
import numpy as np

def get_paths(directory, ftype = 'npz'):
    ret = list()
    for dirpath,_,filenames in os.walk(directory):
        for f in filenames:
            if f.split('.')[-1] == ftype:
                ret.append(os.path.abspath(os.path.join(dirpath, f)))

    return sorted(ret)

def parse_cargs(l):
    return dict([u.split('=') for u in l])

if __name__ == '__main__':
    config = sys.argv[-1]
    cargs = parse_cargs(sys.argv[1:-1])

    lines = open(config, 'r').readlines()
    lines = [u.replace('\n', '') for u in lines]

    cmd = lines[0]
    args_ = lines[1:]

    super = None

    args = list()
    for arg in args_:
        if arg == '':
            continue
        if '###' in arg:
            super = arg.replace('###', '')
            continue

        acmd, params = arg.split(':')

        if acmd == 'over_dir':
            dir_arg = params.split('$')[0]
            dir = cargs[dir_arg]

            ext = params.split('$')[1]
            if '\\' in ext:
                # we have a command
                if '\\split' in ext:
                    sargs = ext.replace('\\split', '')[1:-1]
                    _ = "aix,l=" + sargs
                    exec(_)

                    _ = []
                    for a in args[aix]:
                        for l_ in l:
                            a = a.split(l_[0])[l_[1]]

                        _.append(a)

                    args.append(_)
            else:
                _ = get_paths(dir, ext)

            n_cmds = len(_)
            args.append(_)
        elif acmd == 'single':
            carg = cargs[params.replace('$', '')]

            args.append([carg for u in range(n_cmds)])
        elif acmd == 'path_join':
            dir_arg = params.split('$')[0]
            dir = cargs[dir_arg]

            ext = params.split('$')[1]
            if '\\list' in ext:
                sargs = ext.replace('\\list', '')[1:-1]
                _ = "l=" + sargs
                exec(_)

                _ = []
                for a in l:
                    _.append(os.path.join(dir, a))

            args.append(_)
        elif acmd == 'pickle':
            pkl_arg = params.split('$')[0]
            pkl = cargs[pkl_arg]

            pkl = pickle.load(open(pkl, 'rb'))

            ext = params.split('$')[1]
            if '\\get' in ext:
                _ = []

                ix = int(ext.replace('\\get', '')[1:-1])
                for p in pkl:
                    _.append(p[ix])
            elif '\\index' in ext:
                _ = list(range(len(pkl)))

            args.append(_)
        elif acmd == 'list':
            ext = params.split('$')[1]
            _ = "l=" + ext.replace('\\list', '')[1:-1]
            exec(_)

            args.append(l)

    if super is not None:
        super = super.split(':')
        if super[0] == 'product':
            g = list(map(int, super[-1].split(',')))

            args_ = []
            ix = [g]

            args_.append(list(zip(*[args[u] for u in g])))
            args_.extend([args[u] for u in range(len(args)) if u not in g])
            ix.extend([[u] for u in range(len(args)) if u not in g])

            args_prod = list(product(*args_))

            for al in args_prod:
                _ = np.array(['' for u in range(len(args))], dtype = str)

                print(ix, al)

                print(_)
                sys.exit()


    else:
        cmds = []
        args = zip(*args)

        print('#!/bin/bash')
        for a in args:
            print(cmd.format(*a))
